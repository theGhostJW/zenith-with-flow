===== CheckUtils =====
/****** Exports *****/
	TODO: checkExists = checkExists;
	TODO: checkExistsNot = checkExistsNot;
	TODO: checkText = checkText;
	TODO: checkTextAgainstTextFile = checkTextAgainstTextFile;
	TODO: checkEqual = checkEqual;
	TODO: checkContains = checkContains;
	TODO: checkTextContainsFragments = checkTextContainsFragments;
	TODO: checkTextContainsFragmentsFromFile = checkTextContainsFragmentsFromFile;
	TODO: check = check;
	TODO: checkFalse = checkFalse;
===== DataEntryUtils =====
/****** Exports *****/
	TODO: read = read;
	TODO: set = set;
===== DateTimeUtils =====
/****** Exports *****/
	TODO: dateTimeToReadableString = dateTimeToReadableString;
	TODO: tcDateTimeToInt = tcDateTimeToInt;
	TODO: intToTCDateTime = intToTCDateTime;
	TODO: dateReplacer = dateReplacer;
	TODO: dateReviver = dateReviver;
	TODO: now = now;
	TODO: today = today;
	TODO: getDate = getDate;
	TODO: getTime = getTime;
	TODO: datePlus = datePlus;
	TODO: todayPlus = todayPlus;
	TODO: logDateHeader = logDateHeader;
===== DBUtils =====
/****** Exports *****/
	TODO: makeSQlServerConnectionString = makeSQlServerConnectionString;
	TODO: makeSQLite3ConnectionString = makeSQLite3ConnectionString;
	TODO: runSQLQuery = runSQLQuery;
	TODO: getRecords = getRecords;
	TODO: getRecord = getRecord;
	TODO: getField = getField;
===== EmailUtils =====
/****** Exports *****/
	TODO: sendEmail = sendEmail;
===== ExcelDataConnectionUtils =====
/****** Exports *****/
	TODO: DataConnection = DataConnection;
===== ExcelParamsLoaderUtils =====
/****** Exports *****/
	TODO: worksheetToArray = worksheetToArray;
===== ExcelUtils =====
/****** Exports *****/
	TODO: TerminateExcelProcess = TerminateExcelProcess;
	TODO: getSheetCount = getSheetCount;
	TODO: getSheetValuesAsString = getSheetValuesAsString;
	TODO: colNo = colNo;
===== FileUtils =====
/****** Exports *****/
	TODO: ISSUES_FILE_SUFFIX = ISSUES_FILE_SUFFIX;
	TODO: issuesFileSuffix = issuesFileSuffix;
	TODO: fileToTables = fileToTables;
	TODO: fileToTable = fileToTable;
	TODO: parentDir = parentDir;
	TODO: listFiles = listFiles;
	TODO: listFolders = listFolders;
	TODO: eachFile = eachFile;
	TODO: eachFolder = eachFolder;
	TODO: defaultExtension = defaultExtension;
	TODO: clearDirectoy = clearDirectoy;
	TODO: toTemp = toTemp;
	TODO: toTempReadable = toTempReadable;
	TODO: zipAll = zipAll;
	TODO: unzipAll = unzipAll;
	TODO: fromTemp = fromTemp;
	TODO: fileToObject = fileToObject;
	TODO: objectToFile = objectToFile;
	TODO: toTestData = toTestData;
	TODO: fromTestData = fromTestData;
	TODO: arrayToFile = arrayToFile;
	TODO: fileToArray = fileToArray;
	TODO: relativeToAbsolute = relativeToAbsolute;
	TODO: changeExtension = changeExtension;
	TODO: nowLogSuffix = nowLogSuffix;
	TODO: browserdDownLoadFolder = browserdDownLoadFolder;
	TODO: forceDirectory = forceDirectory;
	TODO: tempFile = tempFile;
	TODO: tempDir = tempDir;
	TODO: testDataPath = testDataPath;
	TODO: runTimeFilesPath = runTimeFilesPath;
	TODO: parentFolder = parentFolder;
	TODO: runTimeFile = runTimeFile;
	TODO: logsDirPath = logsDirPath;
	TODO: logFilePath = logFilePath;
	TODO: logFilePathWithTimeStampSuffix = logFilePathWithTimeStampSuffix;
	TODO: projectChildPath = projectChildPath;
	TODO: suiteChildPath = suiteChildPath;
	TODO: systemTempFile = systemTempFile;
	TODO: combine = combine;
	TODO: systemTempDir = systemTempDir;
	TODO: forceSlash = forceSlash;
	TODO: copyToLogAddDateStamp = copyToLogAddDateStamp;
	TODO: clearBrowserDownloadsDirectory = clearBrowserDownloadsDirectory;
	TODO: clearDirectory = clearDirectory;
	TODO: exportToCSV = exportToCSV;
	TODO: lastBrowserDownloadFile = lastBrowserDownloadFile;
	TODO: copyFile = copyFile;
	TODO: copyTestFile = copyTestFile;
	TODO: mockFile = mockFile;
	TODO: testDataFile = testDataFile;
	TODO: testDataString = testDataString;
	TODO: tempString = tempString;
	TODO: toTempString = toTempString;
	TODO: stringToTestData = stringToTestData;
	TODO: testDataFileLastModified = testDataFileLastModified;
	TODO: fileLastModified = fileLastModified;
===== HtmlGridUtils =====
/****** Exports *****/
	TODO: readCell = readCell;
	TODO: cell = cell;
	TODO: setGrid = setGrid;
	TODO: eachCell = eachCell;
	TODO: eachCellSimple = eachCellSimple;
	TODO: readGrid = readGrid;
	TODO: lwrCaseTrimNoWhiteSpace = lwrCaseTrimNoWhiteSpace;
===== ReflectionUtils =====
/****** Exports *****/
	TODO: scriptContents = scriptContents;
	TODO: scriptFilePath = scriptFilePath;
	TODO: scriptFilesInProject = scriptFilesInProject;
	TODO: testFilesInProject = testFilesInProject;
	TODO: testFilePathsInProject = testFilePathsInProject;
	TODO: scriptFilesInProjectFile = scriptFilesInProjectFile;
	TODO: extendedScriptInfo = extendedScriptInfo;
	TODO: extendedScriptInfoFromAllScripts = extendedScriptInfoFromAllScripts;
	TODO: isPublicScriptName = isPublicScriptName;
	TODO: isPublicScript = isPublicScript;
	TODO: isEndPointOrUnitTestName = isEndPointOrUnitTestName;
===== SimplifiedLogUtils =====
/****** Exports *****/
	TODO: inExpectDefect = inExpectDefect;
	TODO: UNMET_DEFECT_EXPECTATION_PREFIX = UNMET_DEFECT_EXPECTATION_PREFIX;
	TODO: interestingMessage = interestingMessage;
	TODO: onLogMessage = onLogMessage;
	TODO: GeneralEvents_OnLogLink = GeneralEvents_OnLogLink;
	TODO: logThemessage = logThemessage;
	TODO: onLogError = onLogError;
	TODO: onLogWarning = onLogWarning;
	TODO: callLogErrorWarningEvent = callLogErrorWarningEvent;
	TODO: onLogErrorEndPoint = onLogErrorEndPoint;
	TODO: logTime = logTime;
	TODO: isStartTest = isStartTest;
	TODO: isEndTest = isEndTest;
	TODO: isDefectStart = isDefectStart;
	TODO: isActiveDefectStart = isActiveDefectStart;
	TODO: isInActiveDefectStart = isInActiveDefectStart;
	TODO: isDefectEnd = isDefectEnd;
	TODO: ERROR_PREFIX = ERROR_PREFIX;
	TODO: FILTER_LOG_TOKEN = FILTER_LOG_TOKEN;
	TODO: FILTER_RESULTS_HEADER = FILTER_RESULTS_HEADER;
	TODO: isError = isError;
	TODO: isFilterLog = isFilterLog;
	TODO: saveProcessSimplifiedLog = saveProcessSimplifiedLog;
	TODO: defaultSimpleLogProcessing = defaultSimpleLogProcessing;
	TODO: parseSimplifiedLogFile = parseSimplifiedLogFile;
	TODO: parseLineUpdateStateAndResult = parseLineUpdateStateAndResult;
	TODO: updateKnowDefectCount = updateKnowDefectCount;
	TODO: updateResultAndResetState = updateResultAndResetState;
	TODO: parseSimplifiedLogFileWriteToTestLog = parseSimplifiedLogFileWriteToTestLog;
	TODO: parseSimplifiedLogFileWriteToTestLogEndPoint = parseSimplifiedLogFileWriteToTestLogEndPoint;
===== StringUtils =====
/****** Exports *****/
	TODO: autoType = autoType;
	TODO: stringToTables = stringToTables;
	TODO: stringToTable = stringToTable;
	TODO: loadTemplate = loadTemplate;
	TODO: capFirst = capFirst;
	TODO: lowerFirst = lowerFirst;
	TODO: padRight = padRight;
	TODO: padLeft = padLeft;
	TODO: repeatString = repeatString;
	TODO: upperCase = upperCase;
	TODO: lowerCase = lowerCase;
	TODO: lwrFirst = lwrFirst;
	TODO: stringToArray = stringToArray;
	TODO: arrayToString = arrayToString;
	DONE - wildcardMatch;
	TODO: csvToArray = csvToArray;
	TODO: bigString = bigString;
	DONE -  replace;
	TODO: standardiseLineEndings = standardiseLineEndings;
	TODO: stringToTimeStampedLogFile = stringToTimeStampedLogFile;
	TODO: createGuid = createGuid;
	TODO: createGuidTruncated = createGuidTruncated;
	TODO: trim = trim;
	TODO: trimWhiteSpace = trimWhiteSpace;
	TODO: lowerRemoveSpacesTrim = lowerRemoveSpacesTrim;
	TODO: trimChars = trimChars;
	DONE - startsWith;
	DONE - endsWith;
	DONE - appendDelim;
	DONE - hasText;
	TODO: stringToFile = stringToFile;
	TODO: bisect = bisect;
	TODO: subStrBefore = subStrBefore;
	TODO: subStrBetween = subStrBetween;
	TODO: subStrAfter = subStrAfter;
	TODO: fileToString = fileToString;
	TODO: newLine = newLine;
	TODO: sameText = sameText;

===== SysUtils =====
/****** Exports *****/
	DONE -  ARRAY_QUERY_ITEM_LABEL - Depricated;
	DONE - fillArray;
	TODO: setParts = setParts;
	TODO: hostNameIs = hostNameIs;
	TODO: flattenObj = flattenObj;
	TODO: valueTracker = valueTracker;
	DONE -  reorderProps;
	DONE -  seekInObj;
	DONE -  seekAllInObj;
	DONE - setInObj = setInObj;
	DONE -  defaultDeep; - depricate in favour of _.defaultsDeep
	DONE - cloneDeep; - depricate in favour of _.cloneDeep
	TODO: arrayDefs = arrayDefs;
	TODO: mapObjectRecursive = mapObjectRecursive;
	TODO: reduceObjectRecursive = reduceObjectRecursive;
	TODO: eachObjectRecursive = eachObjectRecursive;
	TODO: logLink = logLink;
	TODO: TEST_SUMMARY_PREFIX = TEST_SUMMARY_PREFIX;
	TODO: ABORT_ITERATION_TOKEN = ABORT_ITERATION_TOKEN;
	TODO: ABORT_TEST_TOKEN = ABORT_TEST_TOKEN;
	TODO: ABORT_RUN_TOKEN = ABORT_RUN_TOKEN;
	TODO: objectToReadable = objectToReadable;
	TODO: functionNameFromFunction = functionNameFromFunction;
	DONE - xOr
	TODO: isRunnningInInteractiveMode = isRunnningInInteractiveMode;
	TODO: chunk = chunk;
	TODO: seekParent = seekParent;
	TODO: seekParenth = seekParenth;
	TODO: doNothing = doNothing;
	TODO: pushLogFolder = pushLogFolder;
	TODO: popLogFolder = popLogFolder;
	TODO: objectToJson = objectToJson;
	TODO: jsonToObject = jsonToObject;
	TODO: hasProperty = hasProperty;
	TODO: highlight = highlight;
	TODO: waitRetry = waitRetry;
	TODO: projectScriptFileEncoding = projectScriptFileEncoding;
	TODO: terminateInternetExplorer = terminateInternetExplorer;
	TODO: notImplementedWarning = notImplementedWarning;
	TODO: fullyEnableCallStack = fullyEnableCallStack;
	TODO: liesWithin = liesWithin;
	TODO: pointsOverlap = pointsOverlap;
	TODO: seek = seek;
	TODO: seekh = seekh;
	TODO: seekAll = seekAll;
	TODO: logError = logError;
	TODO: waitAlias = waitAlias;
	TODO: logCheckPoint = logCheckPoint;
	TODO: logItalic = logItalic;
	TODO: logBold = logBold;
	TODO: log = log;
	TODO: logWarning = logWarning;
	TODO: logAttributes = logAttributes;
	TODO: logLinkWithAttributes = logLinkWithAttributes;
	DONE - areEqual;
	TODO: isNullOrUndefined = isNullOrUndefined;
	DONE - isNullEmptyOrUndefined;
	DONE - hasValue;
	DONE - exists;
	TODO: terminateProcess = terminateProcess;
	TODO: executeFile = executeFile;
	TODO: processExists = processExists;
	TODO: expectDefect = expectDefect;
	TODO: endDefect = endDefect;
	DONE -  def
	DONE -  throwEx renamed to fail
	DONE -  ensure;
	TODO: forceArray = forceArray;
	TODO: globalAbortLevel = globalAbortLevel;
	TODO: resetGlobalAbortLevel = resetGlobalAbortLevel;
	DONE -  RED;	- Depricated
	DONE -  GREEN; - Depricated
	DONE -  YELLOW; - Depricated
	DONE - ENUM_ERROR; - Depricated
	DONE -  ENUM_WARNING; - Depricated
	DONE -  ENUM_MESSAGE; - Depricated
	DONE -  ENUM_PASS; - Depricated
	TODO: fontColour = fontColour;
	TODO: logColourAttributes = logColourAttributes;
===== TestCaseListUtils =====
/****** Exports *****/
	TODO: testListItems = testListItems;
	TODO: listContentAsArrayMinusHeader = listContentAsArrayMinusHeader;
	TODO: regenerateTestCaseListFile = regenerateTestCaseListFile;
===== TestRunner =====
/****** Exports *****/
	TODO: testFilters = testFilters;
	TODO: registerTestRunElement = registerTestRunElement;
	TODO: defaultRunConfigInfo = defaultRunConfigInfo;
	TODO: defaultRunConfigForTestCaseEndPoint = defaultRunConfigForTestCaseEndPoint;
	TODO: defaultTestConfigInfo = defaultTestConfigInfo;
	TODO: lastItemWithValidators = lastItemWithValidators;
	TODO: topIssue = topIssue;
	TODO: all = all;
	TODO: runTestCaseEndPoint = runTestCaseEndPoint;
===== TestRunnerUtils =====
/****** Exports *****/
	TODO: MOCK_REPLACE_NONE = MOCK_REPLACE_NONE;
	TODO: MOCK_ADD_MISSING_REPLACE_FAILED = MOCK_ADD_MISSING_REPLACE_FAILED;
	TODO: MOCK_REPLACE_ALL = MOCK_REPLACE_ALL;
	TODO: expect_defect = expect_defect;
	TODO: registerTestRunElement = registerTestRunElement;
	TODO: getConfig = getConfig;
	TODO: isRestart = isRestart;
	TODO: testSubList = testSubList;
	TODO: issuesPath = issuesPath;
	TODO: issuesFileName = issuesFileName;
	TODO: generateManifest = generateManifest;
	TODO: runTests = runTests;
	TODO: validateAndSetDefaultConfigProperties = validateAndSetDefaultConfigProperties;
	TODO: runTestCaseEndPoint = runTestCaseEndPoint;
	TODO: scriptNameFromId = scriptNameFromId;
===== ToReadableUtils =====
/****** Exports *****/

===== XmlTemplateLoaderUtils =====
/****** Exports *****/
	TODO: loadXmlTemplate = loadXmlTemplate;
	TODO: convertToSimpleTemplate = convertToSimpleTemplate;
	TODO: propsObjectFromTemplate = propsObjectFromTemplate;
	TODO: standardStartEndTags = standardStartEndTags;
	TODO: templateParts = templateParts;
	TODO: removeSection = removeSection;
	TODO: transformSection = transformSection;
===== XmlToJsonUtils =====
/****** Exports *****/
	TODO: xmlToObject = xmlToObject;
	TODO: xmlToJson = xmlToJson;
===== EndPointLauncherUtils =====

===== DataGenerationUtils =====
/****** Exports *****/
	TODO: randomItem = randomItem;
	TODO: randomInt = randomInt;
