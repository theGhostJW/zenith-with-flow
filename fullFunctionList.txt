TDate 					To Do			Done			Completion
------------------------------------
01-08-2017 			231				57				19.8 %
06-08-2017 			225				65				22.4 %
11-08-2017			209				74				26.1 %
12-08-2017			162				96				37.2 %
12-08-2017			161				97				37.6 %
19-08-2017			150				108				41.9 %
20-08-2017			141				115				44.9 %
26-08-2017			129				127				49.6 %
26-08-2017			123 		 	133 			52.0 %
27-08-2017			120 		 	135 			52.9 %
27-08-2017			116 		 	139 			54.5 %
28-08-2017			107 		 	148 			58.0 %
29-08-2017			100				155				60.8 %
30-08-2017			87				166				65.6 %
31-08-2017			83				168				66.9 %
02-09-2017			75				177				70.2 %
23-12-2017			18				233				92.8 %
26-12-2017			07				244				97.2 %

===== CheckUtils =====
/****** Exports *****/
	DONE - checkExists = checkExists - depricated;
	DONE -  checkExistsNot = checkExistsNot - depricated;
	DONE - checkText = checkText;
	DONE -  checkTextAgainstTextFile = depricated;
	DONE - checkEqual = checkEqual;
	DONE - checkContains = checkContains;
	DONE - checkTextContainsFragments = checkTextContainsFragments;
	DONE - checkTextContainsFragmentsFromFile = Depricated;
	DONE - check = check;
	DONE - checkFalse = checkFalse;
===== DateTimeUtils =====
/****** Exports *****/
	DONE - dateTimeToReadableString = dateTimeToReadableString; - YAML
	DONE - tcDateTimeToInt = tcDateTimeToInt; - depricated
	DONE - intToTCDateTime = intToTCDateTime- depricated
	DONE - dateReplacer  - Depricated - for tcDateTime
	DONE - dateReviver   - Depricated - for tcDateTime
	DONE - now = now;
	DONE - today = today;
	DONE - getDate = getDate; - renamed to date
	DONE - getTime = getTime; - renamed to time
	DONE - datePlus = datePlus;
	DONE - todayPlus = todayPlus;
	DONE - logDateHeader = logDateHeader; - depricated
===== DBUtils =====
/****** Exports *****/
  ~ Needs SQL SERVER - DO at D&B use mssql pkg from yarn
	DEFER: makeSQlServerConnectionString = makeSQlServerConnectionString;
	DEFER: makeSQLite3ConnectionString = makeSQLite3ConnectionString;
	DEFER: runSQLQuery = runSQLQuery;
	DEFER: getRecords = getRecords;
	DEFER: getRecord = getRecord;
	DEFER: getField = getField;
===== EmailUtils =====
/****** Exports *****/
	~ Needs Exchange Server ~ Do at D&B
	DEFER: sendEmail = sendEmail;
===== ExcelDataConnectionUtils =====
/****** Exports *****/
	 depricate in favour of CSV
===== ExcelParamsLoaderUtils =====
/****** Exports *****/
	Depricate : worksheetToArray =  in favour of CSV
===== ExcelUtils =====
/****** Exports *****/
	 depricate in favour of CSV
===== FileUtils =====
/****** Exports *****/
	DONE - ISSUES_FILE_SUFFIX = Depricated;
	DONE - issuesFileSuffix = Depricated;
	DONE - fileToTables = fileToTables; - depricated
	DONE - fileToTable = fileToTable;
	DONE - parentDir = parentDir;
	DONE - listFiles = listFiles;
	DONE - listFolders = listFolders;
	DONE - eachFile = eachFile;
	DONE - eachFolder = eachFolder;
	DONE - defaultExtension = defaultExtension;
	DONE - clearDirectoy = clearDirectoy;
	DONE - toTemp = toTemp;
	DONE -  toTempReadable = depricate - usning YAML;
	DONE - zipAll = zipAll;
	DONE - unzipAll = unzipAll;
	DONE -  fromTemp = fromTemp;
	DONE -  fileToObject = fileToObject;
	DONE -  objectToFile = now objToFile;
	DONE -  toTestData = toTestData;
	DONE -  fromTestData = fromTestData;
	DONE - arrayToFile = arrayToFile; - renamed to linesToFile
	DONE - fileToArray = fileToArray; - renamed to fileToLines
	DONE - relativeToAbsolute = relativeToAbsolute;
	DONE - changeExtension = changeExtension;
	DONE - nowLogSuffix = nowLogSuffix;
	DEFER - browserdDownLoadFolder = browserdDownLoadFolder;
	DONE - forceDirectory = forceDirectory;
	DONE - tempFile = tempFile;
	DONE - tempDir = tempDir;
	DONE - testDataPath = testDataPath;
	DONE - runTimeFilesPath = runTimeFilesPath;
	DONE - parentFolder = parentFolder; - depricated (duplicate of parent dir)
	DONE - runTimeFile = runTimeFile;
	DONE - logsDirPath = logsDirPath - renamed logfile;
	DONE - logFilePath = logFilePath;
	DONE - logFilePathWithTimeStampSuffix = depricate;
	DONE - projectChildPath = projectChildPath - made private;
	DONE - suiteChildPath = depricated;
	DONE - systemTempFile = depricated;
	DONE - systemTempDir = depricated;
	DONE - combine;
	DONE - forceSlash = depricated use combine;
	DEFER - copyToLogAddDateStamp = copyToLogAddDateStamp;
	DEFER - clearBrowserDownloadsDirectory = clearBrowserDownloadsDirectory;
	DONE - clearDirectory = clearDirectory;
	DONE - exportToCSV = exportToCSV; - depricated no longer using excel
	DEFER: lastBrowserDownloadFile = lastBrowserDownloadFile;
	DONE - copyFile = copyFile;
	DONE - copyTestFile = Depricated;
	DONE - mockFile = mockFile;
	DONE - testDataFile = testDataFile;
	DONE - testDataString = testDataString;
	DONE - tempString = tempString;
	DONE - toTempString = toTempString;
	DONE - stringToTestData = renamed testDataString ;
	DONE - testDataFileLastModified = Depricatted;
	DONE - fileLastModified = fileLastModified;
===== ReflectionUtils =====
/****** Exports *****/
  -- Depricated - better alternatives for utilities that use this
===== SimplifiedLogUtils =====
/****** Exports *****/
	DONE: inExpectDefect = inExpectDefect;
	DONE: UNMET_DEFECT_EXPECTATION_PREFIX = UNMET_DEFECT_EXPECTATION_PREFIX;
	DONE: interestingMessage = interestingMessage;
	DONE: onLogMessage = onLogMessage;
	DONE: GeneralEvents_OnLogLink = GeneralEvents_OnLogLink;
	DONE: logThemessage = logThemessage;
	DONE: onLogError = onLogError;
	DONE: onLogWarning = onLogWarning;
	DONE: callLogErrorWarningEvent = callLogErrorWarningEvent;
	DONE: onLogErrorEndPoint = onLogErrorEndPoint;
	DONE: logTime = logTime;
	DONE: isStartTest = isStartTest;
	DONE: isEndTest = isEndTest;
	DONE: isDefectStart = isDefectStart;
	DONE: isActiveDefectStart = isActiveDefectStart;
	DONE: isInActiveDefectStart = isInActiveDefectStart;
	DONE: isDefectEnd = isDefectEnd;
	DONE: ERROR_PREFIX = ERROR_PREFIX;
	DONE: FILTER_LOG_TOKEN = FILTER_LOG_TOKEN;
	DONE: FILTER_RESULTS_HEADER = FILTER_RESULTS_HEADER;
	DONE: isError = isError;
	DONE: isFilterLog = isFilterLog;
	DONE: saveProcessSimplifiedLog = saveProcessSimplifiedLog;
	DONE: defaultSimpleLogProcessing = defaultSimpleLogProcessing;
	DONE: parseSimplifiedLogFile = parseSimplifiedLogFile;
	DONE: parseLineUpdateStateAndResult = parseLineUpdateStateAndResult;
	DONE: updateKnowDefectCount = updateKnowDefectCount;
	DONE: updateResultAndResetState = updateResultAndResetState;
	DONE: parseSimplifiedLogFileWriteToTestLog = parseSimplifiedLogFileWriteToTestLog;
	DONE: parseSimplifiedLogFileWriteToTestLogEndPoint = parseSimplifiedLogFileWriteToTestLogEndPoint;
===== StringUtils =====
/****** Exports *****/
	DONE - autoType =  -moved to sysutils;
	DONE - stringToTables = stringToTables;
	DONE - stringToTable = stringToTable;
	DONE - loadTemplate = loadTemplate
	DONE - capFirst = capFirst - renamed upperFirst;
	DONE - lowerFirst = lowerFirst;
	DONE - padRight = padRight;  depricaated use padEnd
	DONE - padLeft = padLeft; depricaated use padStart
	DONE - repeatString = repeatString; use str.repeat(count);
	DONE - upperCase = upperCase;
	DONE - lowerCase = lowerCase;
	DONE - lwrFirst = lwrFirst
	DONE - stringToArray = stringToArray;
	DONE - arrayToString = arrayToString;
	DONE - wildcardMatch;
	DONE - csvToArray = csvToArray;
	DONE - bigString = bigString - n/a DEPRICATE IN FAVOUR OF MULTI LINE STRINGS;
	DONE - replace;
	DONE - standardiseLineEndings = standardiseLineEndings;
	N/A stringToTimeStampedLogFile = stringToTimeStampedLogFile;
	DONE - createGuid = createGuid;
	DONE - createGuidTruncated = createGuidTruncated;
	DONE - trim = trim; -depricate - use string.trim()
	DONE - trimWhiteSpace = -depricate - use string.trim()
	DONE - lowerRemoveSpacesTrim = lowerRemoveSpacesTrim; - depricate
	DONE - trimChars = trimChars;
	DONE - startsWith;
	DONE - endsWith;
	DONE - appendDelim;
	DONE - hasText;
	DONE - stringToFile = stringToFile; - moved to fileUtils
	DONE - bisect = bisect;
	DONE - subStrBefore = subStrBefore;
	DONE - subStrBetween = subStrBetween;
	DONE - subStrAfter = subStrAfter;
	DONE - fileToString = fileToString;
	DONE - newLine = newLine;
	DONE - sameText = sameText;

===== SysUtils =====
/****** Exports *****/
	DONE -  ARRAY_QUERY_ITEM_LABEL - Depricated;
	DONE - fillArray;
	DONE - setParts = setParts;
	DONE - hostNameIs = hostNameIs;
	DONE - flattenObj = flattenObj;
	DONE - valueTracker = valueTracker;
	DONE - reorderProps;
	DONE - seekInObj;
	DONE - seekAllInObj;
	DONE - setInObj = setInObj;
	DONE - defaultDeep; - depricate in favour of _.defaultsDeep
	DONE - cloneDeep; - depricate in favour of _.cloneDeep
	DONE - depricate -  arrayDefs = arrayDefs - use case too complex usee _defaultDeep
  DONE - depricate - mapObjectRecursive = mapObjectRecursive - depricated in favour of deepMapValues
	DONE - reduceObjectRecursive = reduceObjectRecursive - renamed - deepReduceValues ;
	DONE - eachObjectRecursive = eachObjectRecursive - dEPROCATE JUST USE deepMapValues
	DONE - logLink = logLink;
	N/A:  TEST_SUMMARY_PREFIX = TEST_SUMMARY_PREFIX;
	N/A:  ABORT_ITERATION_TOKEN = ABORT_ITERATION_TOKEN;
	N/A:  ABORT_TEST_TOKEN = ABORT_TEST_TOKEN;
	N/A:  ABORT_RUN_TOKEN = ABORT_RUN_TOKEN;
	DONE -  objectToReadable = depricated use yaml;
	DONE - functionNameFromFunction = functionNameFromFunction;
	DONE - xOr
	N/A:  isRunnningInInteractiveMode = isRunnningInInteractiveMode; - Depricated command line if needed later
	DONE - chunk = chunk; - Depricated in favour of lodash _.chunk
	DONE - seekParent = seekParent - N/A;
	DONE - seekParenth = seekParenth - N/A;
	DONE -  doNothing = doNothing; - depricate in favour of lamda
	DONE - pushLogFolder = pushLogFolder;
	DONE - popLogFolder = popLogFolder;
	DONE -  objectToJson = objToJson; - standadise on YAML / use JSON.stringify
	DONE -  jsonToObject = depricated using YAML;
	DEFER - hasProperty = hasProperty - UI;
	DEFER - highlight = highlight - UI;
	DONE - waitRetry = waitRetry - UI;
	DONE  projectScriptFileEncoding = Depricated; - Depricated
	DONE -  terminateInternetExplorer = Depricated;
	DONE -  notImplementedWarning = notImplementedWarning;
	N/A -  fullyEnableCallStack = fullyEnableCallStack;
	DEFER - liesWithin = liesWithin; UI
	DEFER - pointsOverlap = pointsOverlap; UI
	DONE - seek = seek - N/A
	DONE - seekh = seekh  - N/A
	DONE - seekAll = seekAll;
	DONE - logError = logError;
	DEFER waitAlias = waitAlias;
	DONE - logCheckPoint = logCheckPoint;
	DEFER logItalic = logItalic; - unsure of need
	DEFER logBold = logBold; - unsure of need
	DONE - log = log;
	DONE - logWarning = logWarning;
	DONE - logAttributes = logAttributes; - depricated - might create type later
	DONE - logLinkWithAttributes = logLinkWithAttributes; - depricated
	DONE - areEqual;
	DONE - isNullOrUndefined = isNullOrUndefined; - depricated in faour of == / !=
	DONE - isNullEmptyOrUndefined;
	DONE - hasValue;
	DONE - exists;
	DONE: terminateProcess = terminateProcess; - killTask
	DONE: executeFile = executeFile;
	DONE: processExists = processExists; - depricate internal  not needed
	DONE: expectDefect = expectDefect;
	DONE: endDefect = endDefect;
	DONE - def
	DONE - throwEx renamed to fail
	DONE - ensure;
	DONE - forceArray = forceArray;
	N/A - globalAbortLevel = globalAbortLevel;
	DONE resetGlobalAbortLevel = resetGlobalAbortLevel; - depricated
	DONE -  RED;	- Depricated
	DONE -  GREEN; - Depricated
	DONE -  YELLOW; - Depricated
	DONE - ENUM_ERROR; - Depricated
	DONE -  ENUM_WARNING; - Depricated
	DONE -  ENUM_MESSAGE; - Depricated
	DONE -  ENUM_PASS; - Depricated
	DONE fontColour = fontColour; - depricated
	DONE logColourAttributes = logColourAttributes; - depricated
===== TestCaseListUtils =====
/****** Exports *****/
	DONE: testListItems = testListItems;
	DONE: listContentAsArrayMinusHeader = listContentAsArrayMinusHeader;
	DONE: regenerateTestCaseListFile = regenerateTestCaseListFile;
===== TestRunner =====
/****** Exports *****/
	DONE: testFilters = testFilters;
	DONE: registerTestRunElement = registerTestRunElement;
	DONE: defaultRunConfigInfo = defaultRunConfigInfo;
	DONE: defaultRunConfigForTestCaseEndPoint = defaultRunConfigForTestCaseEndPoint;
	DONE: defaultTestConfigInfo = defaultTestConfigInfo;
	DONE: lastItemWithValidators = lastItemWithValidators;
	DONE: topIssue = topIssue;
	DONE: all = all;
	DONE: runTestCaseEndPoint = runTestCaseEndPoint;
===== TestRunnerUtils =====
/****** Exports *****/
	DONE: MOCK_REPLACE_NONE = MOCK_REPLACE_NONE;
	DONE: MOCK_ADD_MISSING_REPLACE_FAILED = MOCK_ADD_MISSING_REPLACE_FAILED;
	DONE: MOCK_REPLACE_ALL = MOCK_REPLACE_ALL;
	DONE: expect_defect = expect_defect;
	DONE: registerTestRunElement = registerTestRunElement;
	DONE: getConfig = getConfig;
	DONE: isRestart = isRestart;
	DONE: testSubList = testSubList;
	DONE: issuesPath = issuesPath;
	DONE: issuesFileName = issuesFileName;
	DONE: generateManifest = generateManifest;
	DONE: runTests = runTests;
	DONE: validateAndSetDefaultConfigProperties = validateAndSetDefaultConfigProperties;
	DONE: runTestCaseEndPoint = runTestCaseEndPoint;
	DONE: scriptNameFromId = scriptNameFromId;
===== ToReadableUtils =====
/****** Exports *****/

===== XmlTemplateLoaderUtils =====
/****** Exports *****/
	DONE: loadXmlTemplate = loadXmlTemplate;
	DONE: convertToSimpleTemplate = convertToSimpleTemplate;
	DONE: propsObjectFromTemplate = propsObjectFromTemplate;
	DONE: standardStartEndTags = standardStartEndTags;
	DONE: templateParts = templateParts;
	DONE: removeSection = removeSection;
	DONE: transformSection = transformSection;

===== XmlToJsonUtils =====
/****** Exports *****/
	DONE: xmlToObject = xmlToObject;
	DEPRICATED: xmlToJson = xmlToJson; ~ not usefull easy to call JSON.stringify / standadising on YAML
===== EndPointLauncherUtils =====

===== DataGenerationUtils =====
/****** Exports *****/
	DEPRICATE: randomItem = randomItem; ~ _.sample
	DONE: randomInt = randomInt;
